{"version":3,"sources":["Models/Category.js","Components/MenuEnter.js","Components/MenuLeave.js","Components/MainCss.js","Components/Dialogs/DialogBox.js","Components/Header/TaskButtons.js","Components/Header/TaskStatus.js","Models/todo.js","Components/Header/ToDoHeader.js","Components/List/TodoList.js","Components/ChangeStatus.js","Components/Main.js","App.js","index.js"],"names":["Category","Name","Color","MenuEnter","e","target","getAttribute","style","backgroundColor","color","parentElement","MenuLeave","useStyles","makeStyles","theme","root","display","height","Listroot","width","palette","background","paper","position","overflow","maxHeight","margin","spacing","form","flexDirection","formControl","marginTop","minWidth","formControlLabel","anchorMenu","padding","fontSize","fontWeight","anchorSelected","CategoryMenu","textAlign","ButtonBackground","float","divToDoList","marginBottom","divStepour","paddingBottom","TaskMenuColor","StatusBar","DivChangeStatus","paddingRight","DivTasksLeft","paddingLeft","DivTasksList","paddingTop","HeaderBackground","DivChkBox","DivAddTask","Percent","AppDialogBox","props","Dialog","scroll","open","Open","onClose","HandleClose","aria-labelledby","Title","DialogTitle","id","DialogContent","children","DialogActions","AddButton","Button","className","Margin","onClick","TaskButtons","classes","React","useState","setOpen","handleClickOpen","addCategory","metadata","document","getElementById","value","push","buttonItems","map","Item","menucolor","menuColor","onMouseEnter","onMouseLeave","colorItems","href","noValidate","FormControl","TextField","label","TaskStatus","totalTasks","TodoItem","length","completeTask","completed","tdWidth1","Math","floor","tdWidth2","Fragment","todo","name","category","ToDoHeader","Container","maxWidth","Typography","component","ToDoList","listItems","Items","ListItem","todoItem","type","onStatusChange","fontFamily","onDelete","textDecoration","List","ChangeStatus","viewTasks","Status","StatusElems","getElementsByTagName","i","StatusTasks","Card","TasksLeft","index","Main","taskLeft","todoTasks","setTasks","Taskstatus","setTaskstatus","taskLeftCount","alert","addTask","AddTaskItem","fullWidth","CssBaseline","Divider","ItemID","window","confirm","splice","status","viewTodoTasks","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.016ba805.chunk.js","sourcesContent":["\n\nconst Category=[\n    {\n       Name:'Home Work',\n       Color: \"#38c9ff\",\n    },\n    {\n       Name:'Assignments',\n       Color: \"#ffab38\",\n    },\n    {\n        Name:'Work',\n        Color: \"#ff3838\",\n    }\n    \n    \n]\n\nexport default Category;\n","\n\nconst MenuEnter=(e)=>{\n    \n    if(e.target.getAttribute('menucolor')!=null)\n    {\n      e.target.style.backgroundColor=e.target.getAttribute('menucolor');\n      e.target.style.color=\"white\";\n    }\n    else\n    {\n      e.target.parentElement.style.backgroundColor=e.target.parentElement.getAttribute('menucolor');\n      e.target.parentElement.style.color=\"white\";\n    }\n    \n   }\n\n\nexport default MenuEnter;\n","const MenuLeave=(e)=>{\n     \n    \n    if(e.target.getAttribute('menucolor')!=null)\n    {\n      e.target.style.backgroundColor=\"white\";\n      e.target.style.color=\"black\";\n    }\n    else\n    {\n      e.target.parentElement.style.backgroundColor=\"white !important\";;\n      e.target.parentElement.style.color=\"black !important\";\n    }\n      \n    }\n\nexport default MenuLeave","import {  makeStyles, } from '@material-ui/core/styles';\n\n\n  \nconst useStyles = makeStyles((theme) => ({\n    root:{\n     display:'flex',\n     height:'40px !important',\n    },\n    Listroot:{\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n      position: 'relative',\n      overflow: 'auto',\n      maxHeight: 250,\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    form: {\n      display: 'flex',\n      flexDirection: 'column',\n      margin: 'auto',\n      width: 'fit-content',\n    },\n    formControl: {\n      marginTop: theme.spacing(2),\n      minWidth: 120,\n    },\n    formControlLabel: {\n      marginTop: theme.spacing(1),\n    },\n    anchorMenu:{\n      color:'#f77062',\n      backgroundColor:'white',\n      padding:'20px',\n      fontSize:'14px',\n      fontWeight:'bold',\n      \n    },\n     anchorSelected:{\n      color:'White',\n      backgroundColor:'#f77062',\n      padding:'20px',\n      fontSize:'14px',\n      fontWeight:'bold',\n   \n    },\n    CategoryMenu:{\n      height:'25px',\n      fontSize:'12px',\n      textAlign:'center',\n      fontWeight:'bold'\n    },\n    \n    ButtonBackground:{\n      width:'5px',\n      height:'25px',\n      float:'left',\n      display:'block'\n    },\n    divToDoList:{\n      color: 'black',\n      height: '30px', \n      fontWeight:'bold',\n      fontSize:'34px', \n      marginBottom:'30px'\n    },\n    divStepour:{\n      color: 'lightgrey',\n      height: '10px', \n      fontSize:'10px', \n      paddingBottom:'5px' \n    },\n    TaskMenuColor:{\n      width:\"20px\",\n      height:'20px',\n      display:'block'\n    },\n    StatusBar:{\n      color: 'lightgrey', \n      height: '40px',\n      fontSize:'18px',\n      textAlign:'Center'\n    },\n    DivChangeStatus:{\n      float:'right',\n      width:'60%',\n      textAlign:'right',\n      paddingRight:'30px'\n    },\n    DivTasksLeft:{\n      color:'#f77062',\n      width:'40%', \n      padding:'10px', \n      fontWeight:'bold',  \n      paddingLeft:'20px'\n    },\n    DivTasksList:{\n      backgroundColor: 'white',\n      height: '57vh',\n      paddingTop:'0px'\n\n    },\n    HeaderBackground :{\n      backgroundColor: 'white', \n      height: '32vh',\n      paddingTop:'10px'\n    },\n   \n    DivChkBox:{\n      float:'left',\n      width:'8%',\n      padding:'20px'\n    },\n\n    DivAddTask:{\n      width:'92%',\n      float:'right'\n    },\n\n    Percent:{\n      backgroundColor:'#f77062'\n    }\n\n    \n  }));\n  \n  \n  export default useStyles;\n  \n  \n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n\n/**\n * AppDialogBox is a component which contain add  categories dialog box.\n *  \n * @returns     Dialog \n * \n * {props.Title} Title of the dialog box\n *  {props.children} adds new category  and the color code text field\n * {props.AddButton}  add category button\n * {props.HandleClose} close button in the dialog box\n */\n\nexport default function AppDialogBox(props){\n  \n  \n    return (\n        <Dialog \n        scroll='body' \n        open={props.Open}\n        onClose={props.HandleClose} \n        aria-labelledby={props.Title}>  \n        <DialogTitle id=\"max-width-dialog-title\">{props.Title}</DialogTitle> \n        <DialogContent>\n           {props.children}\n         </DialogContent>\n        <DialogActions>\n        {props.AddButton}\n        <Button className={props.Margin} onClick={props.HandleClose}>\n        Close\n        </Button>\n       </DialogActions>\n      </Dialog>\n    )\n\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Category from '../../Models/Category';\nimport AddIcon from '@material-ui/icons/Add';\nimport MenuEnter from '../MenuEnter'\nimport MenuLeave from '../MenuLeave'\nimport useStyles from \"../MainCss\";\nimport AppDialogBox from '../Dialogs/DialogBox';\n\n/**\n * TaskButtons displays all category and colors\n *  \n * @returns   AppDialogBox\n * @method addTaskButton\n * @method addCategory\n * @method buttonItems // This  function displays all category name\n * @method colorItems  // This  function displays different label color in dialog box\n * onClick={addCategory} this function is used to add new category and the color code when Add category button is clicked\n */\n\nexport default function TaskButtons() {\n  const classes = useStyles(); /** Main css */\n  const [open, setOpen] = React.useState(false);\n  \n  \n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const addTaskButton=()=>{\n    return(\n      <Button  className={classes.margin}  onClick={addCategory}>\n      Add Category\n      </Button>\n    )\n  }\n\n  const addCategory=()=>{\n    \n      var metadata={\n        Name:document.getElementById(\"txtCategory\").value,\n        Color:document.getElementById(\"txtColor\").value\n      }\n      Category.push(metadata);\n      setOpen(false);\n  }\n\n  \n\n  const buttonItems=Category.map((Item)=>\n   <td style={{width:'25%'}} menucolor={Item.Color}   >\n    <div className={classes.ButtonBackground} style={{backgroundColor:Item.Color}} ></div>\n    <div className={classes.CategoryMenu} menuColor={Item.Color}  onMouseEnter={MenuEnter} onMouseLeave={MenuLeave} onClick={handleClickOpen} id={Item.Name}  >\n      <span >{Item.Name}</span>\n      </div>\n    </td>\n  );\n\n  \n  const colorItems=Category.map((Item)=>\n     <td ><span className={classes.TaskMenuColor} style={{backgroundColor:Item.Color}} > </span></td>\n   )\n\n  return (\n    <div>\n      <table width=\"70%\" id=\"tblMenus\"><tr>\n        {buttonItems}\n        <td><a href=\"javascript:void(0)\" onClick={handleClickOpen}><AddIcon/></a></td>\n        </tr></table>\n        <AppDialogBox Title=\"Category\"  Open={open} Margin={classes.margin} HandleClose={handleClose} AddButton={addTaskButton()}>\n          <form className={classes.form} noValidate>\n            <FormControl className={classes.formControl}>\n             <TextField id=\"txtCategory\" label=\"Category\" />\n             <TextField id=\"txtColor\" label=\"Color Code\" />\n             <table width=\"60%\"><tr>{colorItems}</tr></table>\n             </FormControl>\n          </form>\n      </AppDialogBox>\n     </div>\n  \n\n  );\n}\n","import React from 'react';\nimport useStyles from \"../MainCss\";\n\n/**\n * TaskStatus shows how much percentage task completed in progress bar\n */\nexport default function TaskStatus(props) {\n\n    const classes = useStyles();\n    let totalTasks=props.TodoItem.length;\n    let completeTask=0;\n    props.TodoItem.map((Item)=>{\n        if(Item.completed===true)\n      completeTask++;\n    })\n\n    let perCompleted=Math.floor((completeTask/totalTasks)*100);\n    \n    let tdWidth1=perCompleted+\"%\"\n    let tdWidth2=tdWidth1+\" Completed\"\n    \n\n    return (\n  \n      <React.Fragment>\n      <table width='100%' style={{paddingLeft:'0px'}}>\n        <tr>\n          <td className={classes.Percent} style={{width:tdWidth1}}>&nbsp;</td>\n          <td className={classes.StatusBar} >{tdWidth2}</td>\n        </tr>\n      </table>\n      </React.Fragment>\n      \n    );\n  }","const todo=[\n    {\n        id: 1,\n        name:'Eating noddles',\n        completed: true,\n        category: 'Home Work',\n        Color: \"#38c9ff\"\n    },\n    {\n        id: 2,\n        name:'Go to grocery',\n        completed: false,\n        category: 'Home Work',\n        Color: \"#38c9ff\"\n    },\n    {\n        id: 3,\n        name:'Watching Netflix',\n        completed: false,\n        category: 'Assignments',\n        Color: \"#ffab38\",\n    },\n    {\n        id: 4,\n        name:'Doing some coding',\n        completed: true,\n        category: 'Work',\n        Color: \"#ff3838\",\n    }\n]\n\nexport default todo;\n","import React from 'react';\nimport TaskButtons from './TaskButtons';\nimport TaskStatus from './TaskStatus';\nimport todo from '../../Models/todo' ;\nimport useStyles from \"../MainCss\";\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n\n/**\n * ToDoHeader component shows labels, category and progress bar\n *  \n * @returns  TaskButtons\n * @returns  TaskStatus\n\n */\nexport default function ToDoHeader() {\n  const classes = useStyles();\n  return (\n\n    <React.Fragment>\n    <Container maxWidth=\"sm\">\n    <Typography component=\"div\" className={classes.HeaderBackground}  >\n    <div style={{ backgroundColor: 'white',paddingTop:'25px'  }}>\n    <div className={classes.divStepour}>\n    STEPOUr\"\n    </div>\n    <div className={classes.divToDoList}>\n    To-Do List\n    </div>\n    </div>\n    <TaskButtons />\n    <div style={{paddingBottom:'10px'}}></div>\n    <TaskStatus TodoItem={todo}/>\n    </Typography>\n    </Container>\n         \n  </React.Fragment>\n    \n  );\n}\n\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport useStyles from \"../MainCss\";\n\n\n\nexport default function ToDoList(props) {\n    const classes = useStyles();\n  \n\n    const IsCompleteItems=((todoItem)=>{\n        if(todoItem.completed==false)\n        {\n            return(<input type=\"radio\" name=\"isCompleted\" value={todoItem.name} onClick={()=>props.onStatusChange(todoItem.id)}></input>)\n        }\n        else\n        return (<div>&nbsp;&nbsp;&nbsp;&nbsp;</div>);\n\n    })\n\n    const listItems=props.Items.map((Item)=>\n    \n    <ListItem>\n       {IsCompleteItems(Item)}\n       &nbsp;&nbsp;\n       <div style={{width:\"14px\",height:'14px',backgroundColor:Item.Color}}> </div>&nbsp;&nbsp; <span style={{fontSize:'14px',fontFamily:'Arial'}}> {Item.name}</span> &nbsp;&nbsp; <a onClick={()=>props.onDelete(Item.id)} style={{textDecoration:'none',color:'grey'}} href=\"javascript:void(0)\"><DeleteIcon style={{fontSize:'18px'}} /></a>\n    </ListItem>\n      \n    );\n\nreturn (\n    <Typography component=\"div\" className={classes.DivTasksList} >\n    <List className={classes.Listroot}> \n        {listItems}\n    </List>\n    </Typography>\n)   \n\n}\n","import React from 'react';\nimport useStyles from \"./MainCss\";\nimport { Card } from '@material-ui/core';\n\n/**\n * ChangeStatus this component is used to view all the status\n *  \n * @method viewTasks\n \n */\nexport default function ChangeStatus(props){\n\n    const classes = useStyles();\n    const StatusItems=[\"ALL\",\"ONGOING\",\"COMPLETED\"];\n\n    const viewTasks=(Status)=>{\n        var  StatusElems=document.getElementById(Status.Item).parentElement.getElementsByTagName('a');\n\n        for(var i=0;i<StatusElems.length;i++)\n        {\n            if(StatusElems[i].id===Status.Item)\n            StatusElems[i].className=classes.anchorSelected\n            else\n            StatusElems[i].className=classes.anchorMenu\n        }\n\n        props.StatusTasks(Status.Item)\n       \n    }\n\n    return (\n        <React.Fragment>\n        <Card className={classes.root}>\n        <div className={classes.DivTasksLeft}>{props.TasksLeft}</div>\n        <div className={classes.DivChangeStatus}>\n            {\n            StatusItems.map((Item,index)=>\n            {\n                if(index===0)\n                { return(\n                <a className={classes.anchorSelected} id={Item} onClick={()=>viewTasks({Item})} href=\"javascript:void(0)\" >\n                {Item}\n                </a>\n                )}\n                else\n                {return (\n                 <a className={classes.anchorMenu} id={Item} onClick={()=>viewTasks({Item})}  href=\"javascript:void(0)\">\n                    {Item}\n                  </a> \n                )}  \n                \n            }\n            )\n            }\n        </div>\n        </Card>\n        </React.Fragment>\n    ) \n\n}","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Header from './Header/ToDoHeader';\nimport Divider from '@material-ui/core/Divider';\nimport TodoList from './List/TodoList';\nimport todo from '../Models/todo' ;\nimport TextField from '@material-ui/core/TextField';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport Category from '../Models/Category';\nimport { FormControl } from '@material-ui/core';\nimport useStyles from \"./MainCss\";\nimport MenuEnter from './MenuEnter'\nimport MenuLeave from './MenuLeave'\nimport AppDialogBox from '../Components/Dialogs/DialogBox';\nimport ChangeStatus from './ChangeStatus';\nimport Container from '@material-ui/core/Container';\n\n/**\n * Main component is the landing page \n *  \n * @returns Header\n * @returns TodoList\n * @returns ChangeStatus\n * @returns AppDialogBox\n * {props.Title} Title of the dialog box\n *  {props.children} adds new category  and the color code text field\n * {props.AddButton}  add category button\n * {props.HandleClose} close button in the dialog box\n */\nexport default function Main() {\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [todoTasks,setTasks]=React.useState(todo);\n  const [Taskstatus, setTaskstatus] = React.useState(\"ALL\");\n\n  \n  let taskLeft=\"\";\n  \n  const handleClose = () => {\n  \n    setOpen(false);\n  };\n\n  /**\n * statusTasks is used to check the status of the task\n *\n * @Method statusTasks\n */\n \nconst statusTasks = (status) => {\n    \n  let viewTodoTasks=[];\n  if(status===\"ALL\")\n    viewTodoTasks=todo; \n  else if(status===\"ONGOING\")\n  {\n    todo.map((Item)=>{\n      if(Item.completed===false)\n     viewTodoTasks.push(Item)\n    })\n   \n  }\n  else if(status===\"COMPLETED\")\n  {\n    todo.map((Item)=>{\n      if(Item.completed===true)\n      viewTodoTasks.push(Item)\n    })\n  }\n  setTasks(viewTodoTasks)\n};\n  \n\n /**\n * UpdateStatus is used to update the status of the task from \"ongoing\" to \"complete\"\n *\n * @Method UpdateStatus\n */\n  const UpdateStatus=((ItemID)=>{\n\n    if(window.confirm(\"Are you sure to update task as complete\"))\n     {\n    todo.map((Item)=>{\n      if(Item.id===ItemID)\n      Item.completed=true;\n    })\n    \n    if(Taskstatus===\"ALL\")\n    setTaskstatus(\"COMPLETED\")\n    else\n    setTaskstatus(\"ALL\")\n   }\n\n \n  })\n\n  /**\n * DeleteToDo is used to delete particular task\n *\n * @Method DeleteToDo\n */\n  const DeleteToDo=((ItemID)=>{\n     if(window.confirm(\"Are you sure want to delete a task\"))\n     {\n      \n      for(var i=0;i<todo.length;i++){\n        if(todo[i].id===ItemID)\n        {\n          todo.splice(i,1)\n        }\n\n      }\n      if(Taskstatus===\"ALL\")\n      setTaskstatus(\"COMPLETED\")\n      else\n      setTaskstatus(\"ALL\")\n    }\n    \n    \n  })\n\n/* Counts number of ongoing task left*/ \n  let taskLeftCount=0;\n  todo.map((Item)=>{\n    if(Item.completed===false)\n    taskLeftCount++;\n  })\n  taskLeft=taskLeftCount+\" tasks left\"\n \n\n  /**\n * addTask is used to add new task \n *\n * @Method addTask\n */\n  const addTask = (Item) => {\n\n    if(document.getElementById('txtAddTask').value===\"\")\n    {\n     alert(\"Please enter task in 'Whats needed to be done' text box\")\n     setOpen(false);\n\n    }\n    var todoCount=todo.length+1;\n\n    var metadata={\n      id: todoCount,\n      name:document.getElementById('txtAddTask').value,\n      completed: false,\n      category: Item.category,\n      Color: Item.Color\n    }\n\n    todo.push(metadata);\n    document.getElementById('txtAddTask').value=\"\";\n    setOpen(false);\n\n  };\n\n  const buttonItems=Category.map((Item)=>\n  <React.Fragment>\n    <tr style={{paddingBottom:'10px'}}><td>\n     <div className={classes.ButtonBackground} style={{backgroundColor:Item.Color}}></div>\n      <div className={classes.CategoryMenu} menuColor={Item.Color} onMouseEnter={MenuEnter}\n             onMouseLeave={MenuLeave}  onClick={()=>addTask(Item)} id={Item.Name}  > \n          <span >{Item.Name}</span>\n      </div>\n  </td></tr>\n  </React.Fragment>\n  );\n\n  const AddTaskItem=  \n    <React.Fragment>\n      <div  className={classes.DivChkBox} id='divChkBox'>\n      <a onClick={()=>setOpen(true)}><CheckBoxOutlineBlankIcon/></a>\n      </div> \n      <div className={classes.DivAddTask}>\n      <TextField id=\"txtAddTask\"  fullWidth label=\"What's needed to be done ?\" />\n      </div> \n      </React.Fragment> \n    \n  \n\n  return (\n\n    <React.Fragment>\n    <CssBaseline />\n     <Header/>\n     <Divider/>\n     <Container maxWidth=\"sm\" style={{paddingTop:'5px'}}>\n      {AddTaskItem}\n      <TodoList Items={todoTasks} onStatusChange={UpdateStatus} onDelete={DeleteToDo}/>\n      <ChangeStatus TasksLeft={taskLeft} StatusTasks={statusTasks}></ChangeStatus>\n     </Container>\n\n     <AppDialogBox Title=\"Add New Task\"  Open={open} Margin={classes.margin} HandleClose={handleClose} AddButton=\"\">\n        <form className={classes.form} noValidate>\n        <FormControl className={classes.formControl}>\n          <table >{buttonItems}\n          </table>\n        </FormControl>\n       </form>\n    </AppDialogBox>\n     \n    </React.Fragment>\n    \n  );\n}","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Main from './Components/Main';\n\n\nfunction App() {\n\n  \n  return (\n\n    <React.Fragment>\n    <CssBaseline />\n    <Container maxWidth=\"md\">\n      <Typography component=\"div\" style={{ backgroundColor: 'white', height: '100vh' }} >\n      <Main/>\n      </Typography>\n    </Container>\n   </React.Fragment>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}